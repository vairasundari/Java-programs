/*
Find the Maximum money

Given street of houses (a row of houses), each house having some amount of money kept inside; now there is a thief who is going to steal this money but he has 

a constraint/rule that he cannot steal/rob two adjacent houses. Find the maximum money he can rob.

Input:
The first line of input contains an integer T denoting the number of test cases.
The first line of each test case is N and money.

Output:
Print maximum money he can rob.

Note : Save the file / class as “maxMoney” with appropriate file extension.

Constraints:
1 ≤ T ≤ 100
1 ≤ money ≤ 100
1 ≤ N ≤ 1000

Example:
Input:
2
5 10
2 12

Output:
30
12
*/

//PROGRAM:
import java.util.*;
public class MaxMoney{
   public static void main(String[] args){
	int test_case,i;
	Scanner scan=new Scanner(System.in);
	System.out.println("Enter the  number of test cases:");
	test_case=scan.nextInt();
	for(i=0;i<test_case;i++)
	{
		int Number_of_houses,money,tot_amount=0;
		System.out.println("Enter the number of houses:");
		Number_of_houses=scan.nextInt();
		System.out.println("Enter the amount in each house:");
		money=scan.nextInt();
		if(Number_of_houses%2==0)
			tot_amount=(Number_of_houses/2)*money;
		else
			tot_amount=((Number_of_houses/2)+1)*money;
		System.out.println("The total amount theft is : "+tot_amount);
	}
}}
