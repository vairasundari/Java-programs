/*
 Count total set/one bits

You are given a number N. Find the total count of set bits (number of 1s when the number is represented in binary) form for all numbers from 1 to N(both 

inclusive).

Note : Save the file / class as “countSetBits” with appropriate file extension.

Input:
The first line of input contains an integer T denoting the number of test cases. T testcases follow. The first line of each test case is N.

Output:
For each testcase, in a new line, print the total count of all bits.

Constraints:
1 ≤ T ≤ 100
1 ≤ N ≤ 103

Example:
Input:
2
4
17
Output:
5
35

Explanation:
Testcase1:
An easy way to look at it is to consider the number, n = 4:
0 0 0 = 0
0 0 1 = 1
0 1 0 = 1
0 1 1 = 2
1 0 0 = 1
Therefore , the total number of bits is 5.
*/

//PROGRAM:
import java.util.*;
public class CountSetBits{
   public static void main(String[] args){
	int test_case,i;
	Scanner scan=new Scanner(System.in);
	System.out.println("Enter the  number of test cases:");
	test_case=scan.nextInt();
	for(i=0;i<test_case;i++)
	{
		int Number,j,count=0;
		System.out.println("Enter the  number:");
		Number=scan.nextInt();
		for(j=1;j<=Number;j++){
			int temp,remainder;
			String  binary_value;
			binary_value=Integer.toBinaryString(j);
			temp=Integer.parseInt(binary_value);
			while(temp>0){
				remainder=temp%10;
				if(remainder==1)
				count++;
				temp=temp/10;
				  }
		}System.out.println("The number of 1's is: "+count);
	}
}}
