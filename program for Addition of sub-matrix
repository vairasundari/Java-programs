/*
Addition of sub-matrix

Given a matrix C of size N x M. You are given position of sub-matrix as X1, Y1 and X2, Y2 inside the matrix. Find the sum of all elements inside that sub-matrix.

Note : Save the file / class as “AddSubMatrix” with appropriate file extension.

Input:
The first line of input contains an integer T denoting the number of test cases. The first line of each test case is n and m,n is the number of rows and m is the number of columns. The second line of each test case contains C[N][M]. The third line contains four value of X1, Y1, X2, Y2. X1, Y1 is the top left cell and X2, Y2 is the bottom right cell.

Output:
Print the sum of all elements inside that sub-matrix.

Constraints:
1 = T = 15
1 = N, M = 103
1 = C[N][M] = 106
1 <= X1, Y1, X2, Y2 <= M

Example:
Input:
2
5 6
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
3 4 4 5
3 3
9 8 7 4 2 1 6 5 3
1 2 3 3

Output:
78
26
Explanation:
Testcase 2: Sum from cell starting at position (1, 2) (1-based indexing) and ending at (3, 3) is 26.
*/

//PROGRAM:
import java.util.*;
   public class AddSubMatrix{
	public static void main(String[] args){
	int test_case,i;
	Scanner scan=new Scanner(System.in);
	test_case=scan.nextInt();
	for(i=0;i<test_case;i++){
		int row,col,x1,y1,x2,y2,j,k,sum=0;
		row=scan.nextInt();
		col=scan.nextInt();
		int arr[][]=new int[row][col];
		for(j=0;j<row;j++)
			for(k=0;k<col;k++)
				arr[j][k]=scan.nextInt();
		x1=scan.nextInt();
		y1=scan.nextInt();
		x2=scan.nextInt();
		y2=scan.nextInt();
		for(j=x1-1;j<x2;j++)
			for(k=y1-1;k<y2;k++)
				sum=sum+arr[j][k];
		System.out.println(sum);
	}
}}
