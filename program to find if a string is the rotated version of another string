/*
Write a program to find if a string is the rotated version of another string.

This problem was asked by Google.

Given two strings A and B, return whether or not A can be shifted some number of times to get B.

For example, if A is abcde and B is cdeab, print true.

Input Format :
First line of the input is string A.
Second line of the input is another string B.

Output Format : 
Single line - "True" if it is possible to get string B upon rotating string A by 'n' times otherwise "False".

Constraints : 
1 <= |S| <= 100

Note : The file/class should be named as "StringRotation" with appropriate file extension.

Input 1 :
	abcde
	cdeab
Output 1 :
	True
	
Input 2 :
	abc
	acb
Output 2: 
	False

Input 3 : 
	amazon 
	azonam
Output : 
	True

Input 4 : 
	amazon
	omanaz
Output : 
	False
*/



//PROGRAM:
import java.util.*;
public class StringRotation{
	public static void main(String[] args){
		String str1,str2,temp="";
		Scanner scan=new Scanner(System.in);
		System.out.println("Enter the strings:");
		str1=scan.next();
		str2=scan.next();
		int rotate=str2.length();
		if(str1.length()!=str2.length())
			System.out.println("False");
		else{
			int index=str2.indexOf(str1.charAt(0));
			while(rotate>0){
				temp=temp+str2.charAt(index);
				if((index+1)<str2.length()){
					index++;
					rotate--;}
				else{
					index=0;
					rotate--;
				}}
			
			if(str1.compareTo(temp)==0)
				System.out.println("True");
			else
				System.out.println("False");
			}
		}
}
