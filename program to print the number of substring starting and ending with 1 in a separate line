/*
Binary String

Given a binary string S. The task is to count the number of substrings that start and end with 1. For example, if the input string is 

“00100101”, then there are three substrings “1001”, “100101” and “101”.

Note : Save the file / class as “BinaryStartAndEnd” with appropriate file extension.

Input:
The first line of input contains an integer T denoting the number of test cases. Each test case consist of an integer 'n' denoting the string 

length and next line is followed by a binary string.

Output:
For each testcase, in a new line, print the number of substring starting and ending with 1 in a separate line.

Constraints:
1 = T = 40
1 = |S| = 1000

Example:
Input:
2
4
1111
5
01101

Output:
6
3

Example:
Testcase 1: There are 6 substrings from the given string. They are 11, 11, 11, 111, 111, 1111.
Testcase 2: There 3 substrings from the given string. They are 11, 101, 1101.
*/



//PROGRAM:
import java.util.*;
public class BinaryStartAndEnd{
   public static void main(String[] args){
	int test_case,i;
	Scanner scan=new Scanner(System.in);
	test_case=scan.nextInt();
	for(i=0;i<test_case;i++)
	{
		String str;
		int num,j,count=0,sum=0;
		num=scan.nextInt();
		str=scan.next();
		if(str.length()==num){
		j=0;
		while(j<str.length()){
			if(str.charAt(j)=='1')
			count++;
			j++;
		}
		for(j=0;j<count;j++)
		sum=sum+j;
		System.out.println(sum);	
	}}
}}
